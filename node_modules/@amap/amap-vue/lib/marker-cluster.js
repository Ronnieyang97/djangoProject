"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=(e=require("vue"))&&"object"==typeof e&&"default"in e?e.default:e,r=require("./load-plugins.js"),s=require("./mixins/mixins.js"),n=require("./mixins/props.js"),a=require("./mixins/base.js"),o=require("./utils/safe-get.js"),i=require("./marker.js"),u=require("./utils/debounce.js"),d=require("./utils/perf.js");const l=i.default.sealedOptions,c=t.extend({props:l.props});let p=void 0;function m(e,t,r){const s=e[t];Array.isArray(s)&&(e[t]=new r(s[0],s[1]))}function f(e){return e&&0!==e.length?e.map(e=>{const t={...e};return m(t,"size",AMap.Size),m(t,"offset",AMap.Pixel),m(t,"imageOffset",AMap.Pixel),t}):e}var h=s.default(a.default).extend({name:"AmapMarkerCluster",amapMeta:{prepare:()=>r.default("AMap.MarkerCluster"),async initComponent(e,t){const r=this;return this.$scopedSlots.cluster&&(t.renderClusterMarker=r._renderCluster),this.$scopedSlots.marker&&(t.renderMarker=r._renderMarker),new e.MarkerCluster(r.$map,r.data||[],t)},events:["click"]},props:{data:n.defineProp({type:Array,required:!0,initialize:!1}),gridSize:n.defineProp("setGridSize",Number),maxZoom:n.defineProp("setMaxZoom",Number),averageCenter:n.defineProp({type:Boolean,default:void 0,setter:"setAverageCenter"}),clusterByZoomChange:{type:Boolean,default:void 0},styles:n.defineProp({type:Array,setter(e,t){e.setStyles(f(t))},transform:f}),markerOptions:n.defineProp({type:Function,initialize:!1}),clusterOptions:n.defineProp({type:Function,initialize:!1})},data:()=>({$mcc:null}),mounted(){const e=u.default(this._onDataChange,100),r=this.$scopedSlots.marker,s=this.$scopedSlots.cluster,{$context:n}=this;n.ready.then(()=>{this._onDataChange()});const a=t.extend({props:{point:{type:Object}},render(){if(!r)return null;const e=r(this.point);return o.default(e,"0",null)}}),i=t.extend({props:{context:{type:Object}},render(){if(!s)return null;const e=s(this.context);return o.default(e,"0",null)}});this.$mcc={marker:new a,cluster:new i,dummy:new c},this.$watch("data",{handler:e})},beforeDestroy(){this.$mcc.marker.$destroy(),this.$mcc.cluster.$destroy(),this.$mcc.dummy.$destroy()},methods:{async _onDataChange(){const{data:e,$context:t}=this;await t.ready,t.destroyed||this.$target.setData(e)},_renderMarkerContent(e,t,r){d.start("MarkerCluster#_renderMarkerContent");const s=function(e,t){p||(p=document.createElement("div"));const r=e;return r._props=t,r._vnode=null,r.$mount(p),r._vnode.elm}(t,r);e.marker.setContent(s),d.stop("MarkerCluster#_renderMarkerContent")},_setMarkerOptions(e,t,r){const s={};"function"==typeof t&&Object.assign(s,t(r));const a=Object.keys(s),{dummy:o}=this.$mcc;for(let t=0;t<a.length;++t){const r=a[t],i=s[r],u=l.props[r];void 0!==u&&n.setPropValue(o,e.marker,u,i)}},_renderMarker(e){d.start("MarkerCluster#_renderMarker");const t=e.data[0],r={point:t};this._renderMarkerContent(e,this.$mcc.marker,r),this._setMarkerOptions(e,this.markerOptions,t),d.stop("MarkerCluster#_renderMarker")},_renderCluster(e){d.start("MarkerCluster#_renderCluster");const t={context:e};this._renderMarkerContent(e,this.$mcc.cluster,t),this._setMarkerOptions(e,this.clusterOptions,e),d.stop("MarkerCluster#_renderCluster")}},render:()=>null});exports.default=h;
